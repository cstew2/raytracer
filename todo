things to think about:
-modularizing code?

things to improve:
-make parsing use a structure for names and types of config params
-table pased parsing? name -> (bool, int, float, etc.)
-harmonize loaded config file and runtime config

todo soon:
-redo how main function works
      -need to change control flow for lots of stuff
      -possibly a fucntion just for choosing the rendering api
       and the type of raytracing(primitives or voxels)
(DONE)-generate camera rays in camera.c

(DONE)-fix camera movement(4x4 matrix transformations?)
(DONE)-raytracer ray generation
-load world scene from file(another parser!)
-utility to create world scene files
-light sources and shadows

raytracing quality:
	   -reflections
	   -refractions
	   -shading
	   -materials
	   -textures

raytracing backends:
	(DONE)-opengl
	-vulkan
	-sdl
	-raw framebuffer
	(DONE)-threaded implementation
	-cuda implementation
	-opencl implementation

todo later:
-entities(players, enemies, etc.)
-animation
-sound
-physics
-collision detection
-AI
-events
-ui
-options(in game)
-input interpreter
-output 
-multithreading
	-more general threading
-scripting language
-tools(scene making,animation)

-voxels(and SVO, SVO DAG, Voxel marching algo)
-polygon mesh to voxel algo
